rbac:
  create: true
  pspEnabled: false
serviceAccount:
  create: true
  name: metrics-server
apiService:
  # Specifies if the v1beta1.metrics.k8s.io API service should be created.
  create: true
hostNetwork:
  # Specifies if metrics-server should be started in hostNetwork mode.
  # As an example, this is required if you use Weave network on EKS
  enabled: false
image:
  repository: gcr.io/google_containers/metrics-server-amd64
  tag: v0.3.5
  pullPolicy: IfNotPresent
imagePullSecrets: []
# - registrySecretName
args:
# enable this if you have self-signed certificates, see: https://github.com/kubernetes-incubator/metrics-server
  - --kubelet-insecure-tls
  - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
resources: {}
nodeSelector: {}
tolerations: []
affinity: {}
replicas: 1
podAnnotations: {}
#  See more at: https://kubernetes.io/docs/tasks/administer-cluster/guaranteed-scheduling-critical-addon-pods/
#  scheduler.alpha.kubernetes.io/critical-pod: ''
#  priorityClassName: system-node-critical
extraVolumeMounts: []
#  - name: secrets
#    mountPath: /etc/kubernetes/secrets
#    readOnly: true
extraVolumes: []
#  - name: secrets
#    secret:
#      secretName: kube-apiserver
livenessProbe:
  httpGet:
    path: /healthz
    port: https
    scheme: HTTPS
  initialDelaySeconds: 20
readinessProbe:
  httpGet:
    path: /healthz
    port: https
    scheme: HTTPS
  initialDelaySeconds: 20
securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop: ["all"]
  readOnlyRootFilesystem: true
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001
service:
  annotations: {}
  labels:
  # Add these labels to have metrics-server show up in `kubectl cluster-info`
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: "Metrics-server"
  port: 443
  type: ClusterIP
podDisruptionBudget:
  # https://kubernetes.io/docs/tasks/run-application/configure-pdb/
  enabled: false
  minAvailable:
  maxUnavailable:
