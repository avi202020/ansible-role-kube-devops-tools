---
image:
  repository: k8s.gcr.io/kubernetes-dashboard-amd64
  tag: v1.10.1
  pullPolicy: IfNotPresent
  pullSecrets: []
replicaCount: 1
## Deployment
annotations: {}
labels:
  kubernetes.io/name: "dashboard-ui"
enableSkipLogin: false
enableInsecureLogin: false
extraArgs:
  - --system-banner="Installed using "ansible-role-kube-devops-tools"
## Additional container environment variables
##
extraEnv: []
# - name: SOME_VAR
#   value: 'some value'
podAnnotations:
  seccomp.security.alpha.kubernetes.io/pod: 'runtime/default'
dashboardContainerSecurityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  runAsUser: 1001
  runAsGroup: 2001
## Node labels for pod assignment
## Ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}
## List of node taints to tolerate (requires Kubernetes >= 1.6)
tolerations: []
#  - key: "key"
#    operator: "Equal|Exists"
#    value: "value"
#    effect: "NoSchedule|PreferNoSchedule|NoExecute"
## Affinity
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
affinity: {}
# priorityClassName: ""
service:
  type: ClusterIP
  externalPort: 443
  nameOverride: kubernetes-dashboard
  # LoadBalancerSourcesRange is a list of allowed CIDR values, which are combined with ServicePort to
  # set allowed inbound rules on the security group assigned to the master load balancer
  # loadBalancerSourceRanges: []
  ## Kubernetes Dashboard Service annotations
  ##
  ## For GCE ingress, the following annotation is required:
  ## service.alpha.kubernetes.io/app-protocols: '{"https":"HTTPS"}' if enableInsecureLogin=false
  ## or
  ## service.alpha.kubernetes.io/app-protocols: '{"http":"HTTP"}' if enableInsecureLogin=true
  annotations: {}
  labels:
    kubernetes.io/name: "dashboard-ui"
resources:
  limits:
    cpu: 100m
    memory: 100Mi
  requests:
    cpu: 0m
    memory: 0Mi
ingress:
  enabled: true
  labels:
    app: "dashboard-ui"
  annotations:
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: 'true'
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.org/ssl-services: kubernetes-dashboard
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
#    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
  paths:
    - /dashboard-ui(/|$)(.*)
  hosts:
    - {{ env_classification }}.{{ company_domain }}
  tls:
    - secretName: domain-tls-secret
      hosts:
        - {{ env_classification }}.{{ company_domain }}
rbac:
  create: true
  clusterAdminRole: false
  clusterReadOnlyRole: false
serviceAccount:
  create: true
  name: kubernetes-dashboard
livenessProbe:
  initialDelaySeconds: 30
  timeoutSeconds: 30
podDisruptionBudget:
  # https://kubernetes.io/docs/tasks/run-application/configure-pdb/
  enabled: false
  minAvailable:
  maxUnavailable:
## PodSecurityContext for pod level securityContext
securityContext:
  runAsUser: 1001
  runAsGroup: 2001
securityContext: {}
networkPolicy: false
